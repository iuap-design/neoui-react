import {
    Button,
    Layout,
    Row,
    Col,
    Badge,
    Alert,
    Form,
    Input,
    InputNumber,
    Checkbox,
    Pagination,
    Progress,
    Radio,
    Switch,
    Tooltip,
    Dropdown,
    DatePicker,
    Collapse,
    Select,
    Icon,
    Menu,
    Upload,
    Breadcrumb,
    Popconfirm,
    Modal,
    Tabs,
    Cascader,
    Spin,
    Table,
    Tree,
    Rate,
    Steps,
    Timeline,
    Transfer,
    BackTop,
    Slider,
    AutoComplete,
    Popover,
    Anchor,
    ColorPicker,
    Tag,
    Affix,
    Drawer,
    TreeSelect,
    TimePicker,
    Image,
    Carousel,
    Space,
    Empty,
    Avatar,
    Card,
    Divider,
    Calendar,
    Skeleton,
    Clipboard,
    List,
    SvgIcon,
    ConfigProvider
} from '../../index';
import React from 'react';

let getFormInput = (WrapComp: any) => {
    class FormInput extends React.Component<any, any> {
        constructor(props: any) {
            super(props);
            this.state = {
                currValue: props.value
            }
        }
        UNSAFE_componentWillReceiveProps(nextProps: any) {
            if ('value' in nextProps) {
                this.setState({currValue: nextProps.value})
            }
        }

        _onChange = (value: any, e: any)=>{
            let {onChange} = this.props;
            this.setState({currValue: value})
            typeof onChange == 'function' && onChange(value, e);
        }
        render() {
            let {...other} = this.props;
            return (
                <WrapComp {...other} value={this.state.currValue} onChange = {this._onChange} />
            )
        }
    }
    return FormInput
}

const GlobalParser: any = {
    "Layout": Layout,
    "Layout.Header": Layout.Header,
    "Layout.Content": Layout.Content,
    "Layout.Footer": Layout.Footer,
    "Layout.Sider": Layout.Sider,
    "Layout.Spliter": Layout.Spliter,
    "Button": Button,
    "Slider": Slider,
    "Slider.Range": Slider.Range,
    "Slider.Handle": Slider.Handle,
    "AutoComplete": AutoComplete,
    "Badge": Badge,
    "Badge.Ribbon": Badge.Ribbon,
    "Alert": Alert,
    "Button.Group": Button.Group,
    "Form": Form,
    "Form.Item": Form.Item,
    "Form.Provider": Form.Provider,
    "Form.List": Form.List,
    "Form.ErrorList": Form.ErrorList,
    "Input": getFormInput(Input),
    "Input.Group": Input.Group,
    "Input.Group.Button": Input.Group.Button,
    "Input.Group.Addon": Input.Group.Addon,
    "InputNumber": getFormInput(InputNumber),
    "InputNumber.InputNumberGroup": InputNumber.InputNumberGroup,
    "Input.Search": getFormInput(Input.Search),
    "Input.TextArea": getFormInput(Input.TextArea),
    "Input.Password": getFormInput(Input.Password),
    "Checkbox": Checkbox,
    "Checkbox.Group": Checkbox.Group,
    "Pagination": Pagination,
    "Progress": Progress,
    "Progress.Bar": Progress.Bar,
    "Radio": Radio,
    "Radio.Button": Radio.Button,
    "Radio.Group": Radio.Group,
    "Switch": Switch,
    "Tooltip": Tooltip,
    "Row": Row,
    "Col": Col,
    "Dropdown": Dropdown,
    "Dropdown.Button": Dropdown.Button,
    "Collapse": Collapse,
    "Collapse.Panel": Collapse.Panel,
    "Select": Select,
    "Select.Option": Select.Option,
    "Select.OptGroup": Select.OptGroup,
    "Icon": Icon,
    "Menu": Menu,
    "Menu.Item": Menu.Item,
    "Menu.SubMenu": Menu.SubMenu,
    "Menu.ItemGroup": Menu.ItemGroup,
    "Breadcrumb": Breadcrumb,
    "Breadcrumb.Item": Breadcrumb.Item,
    "Upload": Upload,
    "Upload.Dragger": Upload.Dragger,
    "Tabs": Tabs,
    "Tabs.TabPane": Tabs.TabPane,
    "Tabs.SearchTabs": Tabs.SearchTabs,
    "Tabs.SearchTabs.Item": Tabs.SearchTabs.Item,
    "Cascader": Cascader,
    "Spin": Spin,
    "Table": Table,
    "Table.Column": Table.Column,
    "Tree": Tree,
    "Tree.TreeNode": Tree.TreeNode,
    "Rate": Rate,
    "Steps": Steps,
    "Steps.Step": Steps.Step,
    "Timeline": Timeline,
    "Timeline.Item": Timeline.Item,
    "Timeline.Group": Timeline.Group,
    "Transfer": Transfer,
    "BackTop": BackTop,
    "Tag": Tag,
    "ColorPicker": ColorPicker,
    "Affix": Affix,
    "Drawer": Drawer,
    "TreeSelect": TreeSelect,
    "TreeSelect.TreeNode": TreeSelect.TreeNode,
    "DatePicker": DatePicker,
    "DatePicker.WeekPicker": DatePicker.WeekPicker,
    "DatePicker.MonthPicker": DatePicker.MonthPicker,
    "DatePicker.QuarterPicker": DatePicker.QuarterPicker,
    "DatePicker.HalfYearPicker": DatePicker.HalfYearPicker,
    "DatePicker.YearPicker": DatePicker.YearPicker,
    "DatePicker.RangePicker": DatePicker.RangePicker,
    "TimePicker": TimePicker,
    "Image": Image,
    "Carousel": Carousel,
    "Space": Space,
    "Space.Compact": Space.Compact,
    "Empty": Empty,
    "Avatar": Avatar,
    "Avatar.Group": Avatar.Group,
    "Card": Card,
    "Card.Grid": Card.Grid,
    "Divider": Divider,
    "Calendar": Calendar,
    "Skeleton": Skeleton,
    "Skeleton.Button": Skeleton.Button,
    "Skeleton.Avatar": Skeleton.Avatar,
    "Skeleton.Input": Skeleton.Input,
    "Skeleton.Image": Skeleton.Image,
    "Popconfirm": Popconfirm,
    "Modal": Modal,
    "Modal.Title": Modal.Title,
    "Modal.Header": Modal.Header,
    "Modal.Body": Modal.Body,
    "Modal.Footer": Modal.Footer,
    "Popover": Popover,
    "Anchor": Anchor,
    "Anchor.Link": Anchor.Link,
    "Clipboard": Clipboard,
    "List": List,
    "List.Item": List.Item,
    "List.Item.Meta": List.Item.Meta,
    "SvgIcon": SvgIcon,
    "ConfigProvider": ConfigProvider
};

export default GlobalParser
